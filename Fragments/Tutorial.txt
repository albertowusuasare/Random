/*****************************************************************


Author  : Albert Owusu - Asare
Email   : < owusuasa@grinnell.edu >
Version : 1.0 Sun Oct 19 22:37:19 CDT 2014

This document serves to introduce fragments to interested parties.

The documents will be useful to you if :

i) You are familiar to the android environment and have a basic
   workng knowledge of android 
ii) You are familiar with 'Activities'
ii) You have some working knowlege of Java
ii) Some working knowledge of the Eclipse IDE


Please email any criticisms or suggestions to :

< owusuasa@grinnell.edu >


*******************************************************************/

------------------------------
Contents:                    
------------------------------

* Introduction
* What in the world are fragements?
* How do I use a fragment in my app?
* Summary
* Citations


-------------------------------
Introduction:
-------------------------------

	Fragments are utilities that provide programmers(you) a means of having  dynamic layouts during the execution 
of mobile applications. With fragments we are able to display layouts that can perform a variety of 
functions like getting user input, displaying cool animations and so forth.The discussion of fragments is especially 
interesting because it normally introduces a follow up question of "so how are these things you are calling fragments 
any different from activities"? 
       The following text attempts to explain more carefully the motivations for having a fragments while 
discussing the various similarities and differences between fragments and activities. Hence by the end of the
text you should have the answer to, "so how are these things you are calling fragments 
any different from activities"? and you should be able to identify situations where fragments are needed. 
I also hope that you will be able to implement fragments or at least be motivated to go out and read more about them.



-------------------------------
What in the world are fragments?
-------------------------------

According to http://developer.android.com/guide/components/fragments.html:

"A Fragment represents a behavior or a portion of user interface in an Activity."


   I find the statement above to be very critical to our understanfing of fragments because it provides a clear 
definition of what fragments are not, which is that : fragments are not Activities; fragments are found in 
activities and may represent some specific behavior in an Activity. This of course implies that in talking about 
fragments we are inherently talking about activities too. 

Can you see the distinction? ...

Thus a fragment is simply some way of defining how the entire user interface or even parts of the user interface of 
an activity should look, at any particular point in time.

When you think of fragments just think of "LOOK", "LAYOUT", "PORTION" (I couldn't find a nicer 'L' word so "PORTION" 
works too?). It is basically a look/layout we give dynamically to a portion of an activity user interface throughout 
different stages of the execution of our application.

Hmm I kinda see it but ... (Ok I will interrupt your thought here!)

(I should be nice! Ok go on..)

... What do I say if my 80 year old grandfather asks me about fragments?

I would say a fragment is like the skin coloration observed in a chameleon at a particular point in time.
Though the we may have same chameleon, Archaius tigris, we realise that at different points in its day to day life, 
Archaius tigris can take on a new look. This new look is interesting because it also sheds some light on the kind of 
reaction that caused the new look in the 
first place.

I know your grandfather is smart but hmm I dont know about mine... I would go ahead and say, "so grampa,
the chamaleon here is the activity, the different skin colorations are the different fragments associated with 
the activity, and the stimulus (the thing that caused the reaction) are the things that we as programmers set in place
in our programs to produce the expected behaviors of producing fragments in an activity."


----------------------------------
How do I use a fragment in my app?
----------------------------------

First I think it will be handy to understand the fragment life cycle.

Life what..?

Ok check out the page below:

http://developer.android.com/guide/components/fragments.html
Scroll down that page; it is the chart on the right. (Study it, know it, love it.) 

To start create a new Android Application project and select a blank activity.


Step 1 : Create and design xml files for your fragments
-----
Move to res/layout and create the layouts of all the different fragments:

In this tutorial we are going to create two new Android Xml files
i) fragment_01 
ii) fragment_02

Hence  we will have two files in the res/layout folder called fragment_01.xml and fragment_02.xml
In our approach we wil simply design those xml files just as we would for any android activty.


check out my sample design here :

https://github.com/albertowusuasare/Random/tree/master/Fragments/Fragments/res/layout


Step 2 : Create Fragments classes for all your fragments
------

Move to the src Folder and create new classes:

Here we will create:

FragmentOne.java which will correspond to fragment_01.xml 
FragmentTwo.java  which will correspond to fragment_02.xml

( Of course you should always choose better names for your fragments classes)


->  After the classes are created make sure that they  extend 'Fragment'
   
   N.B  you may have to import fragments. If you want to ensure backwards compactibility with older 
   android devices then you will have to select android.support.v4.Fragment if your target devices are running API 11 
   and above,  go ahead and use: android.app.Fragment


Extending 'Fragments' enables our new classes, 'FragmentOne.java' and 'FragmentTwo.java',  to inherit the methods we 
will need to programmatically control the lifecycle of the  fragments.

We will be mostly concern with the inherited method,  "onCreateView(LayoutInflater, ViewGroup, Bundle)".
The "onCreateView() method is called by the system when its is time to draw the fragment's user interface for the the first time.

You should see the documentation of the 'Fragment class' here : 
http://developer.android.com/reference/android/app/Fragment.html, 

We will then  go ahead to add the method to both FragmentOne.java and FragmentTwo.java. 

Below shows  my implementation and some notes.

onCreateView implementation
---------------------------
According to http://developer.android.com/reference/android/app/Fragment.html:
oncreateView  creates and returns the view hierarchy associated with the fragment.

//In FragmentOne.java

@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
	{
		View viewHierarchy = inflater.inflate(R.layout.fragment_01, container, false);
		
		return viewHierarchy;
	}



// In FragmentTwo.java

@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
	{
		View viewHierarchy = inflater.inflate(R.layout.fragment_02, container, false);
		
		return viewHierarchy;
	}



Notes:
----
inflater : This is a  reference to a LayoutInflater which will simply take some xml file and build all of its 
           View objects.

	   Note that the LayoutInflater class has a method 'inflate' that deals with all the intricate details of 
	   converting our xml file resources to some view hierachy.( The view hierarchy defines the how views are 
are linked together demonstrating the layout of views relative  to other views.)  and the returning a reference to the 
start of this view hierarchy structure.

Too much info? Ok I understand!  inflater .inflate()  will basically  convert the res/layout/LAYOUT.xml blowing the 
layouts out into actual view objects to which we can refer to later in our source code.(It gives our layout some 
life!)


container:

According to http://developer.android.com/reference/android/view/ViewGroup.html:
A ViewGroup is a special view that can contain other views (called children).

One may note that  a viewGroup is the base class of the "layout" subclasses. 
(Layouts are special type of view and are a subcalss of the ViewGroup class. Layouts are created soley to control 
how child views are positioned on the screen. )

Read more? : http://developer.android.com/reference/android/view/ViewGroup.html

savedInstanceState : A bundle helps in communicating between the various Activities we have in our application.
		     They can help for passing in data from one Activity to another.



Step 3 : Add the fragments to the desired activity.
------

In my sample, I will create a dual pane activity so I will add both of our fragments to main_activity.xml






Sources:
-----------

Views and inflater:

http://stackoverflow.com/questions/3477422/what-does-layout-inflater-in-android-do
https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/CocoaViewsGuide/WorkingWithAViewHierarchy/WorkingWithAViewHierarchy.html
http://developer.android.com/reference/android/view/ViewGroup.html
